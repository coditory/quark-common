package com.coditory.quark.common.encode;

import com.coditory.quark.common.collection.Maps;

import java.util.Map;

final class TranslationConstants {
    static final Map<String, String> CTRL_CHARS_ENCODE = Maps.<String, String>builder()
            .put("\b", "\\b")
            .put("\n", "\\n")
            .put("\t", "\\t")
            .put("\f", "\\f")
            .put("\r", "\\r")
            .build();

    static final Map<String, String> CTRL_CHARS_DECODE = Maps.invert(CTRL_CHARS_ENCODE);

    static final Map<String, String> ISO8859_1_ENCODE = Maps.<String, String>builder()
            .put("\u00A0", "&nbsp;")
            .put("\u00A1", "&iexcl;")
            .put("\u00A2", "&cent;")
            .put("\u00A3", "&pound;")
            .put("\u00A4", "&curren;")
            .put("\u00A5", "&yen;")
            .put("\u00A6", "&brvbar;")
            .put("\u00A7", "&sect;")
            .put("\u00A8", "&uml;")
            .put("\u00A9", "&copy;")
            .put("\u00AA", "&ordf;")
            .put("\u00AB", "&laquo;")
            .put("\u00AC", "&not;")
            .put("\u00AD", "&shy;")
            .put("\u00AE", "&reg;")
            .put("\u00AF", "&macr;")
            .put("\u00B0", "&deg;")
            .put("\u00B1", "&plusmn;")
            .put("\u00B2", "&sup2;")
            .put("\u00B3", "&sup3;")
            .put("\u00B4", "&acute;")
            .put("\u00B5", "&micro;")
            .put("\u00B6", "&para;")
            .put("\u00B7", "&middot;")
            .put("\u00B8", "&cedil;")
            .put("\u00B9", "&sup1;")
            .put("\u00BA", "&ordm;")
            .put("\u00BB", "&raquo;")
            .put("\u00BC", "&frac14;")
            .put("\u00BD", "&frac12;")
            .put("\u00BE", "&frac34;")
            .put("\u00BF", "&iquest;")
            .put("\u00C0", "&Agrave;")
            .put("\u00C1", "&Aacute;")
            .put("\u00C2", "&Acirc;")
            .put("\u00C3", "&Atilde;")
            .put("\u00C4", "&Auml;")
            .put("\u00C5", "&Aring;")
            .put("\u00C6", "&AElig;")
            .put("\u00C7", "&Ccedil;")
            .put("\u00C8", "&Egrave;")
            .put("\u00C9", "&Eacute;")
            .put("\u00CA", "&Ecirc;")
            .put("\u00CB", "&Euml;")
            .put("\u00CC", "&Igrave;")
            .put("\u00CD", "&Iacute;")
            .put("\u00CE", "&Icirc;")
            .put("\u00CF", "&Iuml;")
            .put("\u00D0", "&ETH;")
            .put("\u00D1", "&Ntilde;")
            .put("\u00D2", "&Ograve;")
            .put("\u00D3", "&Oacute;")
            .put("\u00D4", "&Ocirc;")
            .put("\u00D5", "&Otilde;")
            .put("\u00D6", "&Ouml;")
            .put("\u00D7", "&times;")
            .put("\u00D8", "&Oslash;")
            .put("\u00D9", "&Ugrave;")
            .put("\u00DA", "&Uacute;")
            .put("\u00DB", "&Ucirc;")
            .put("\u00DC", "&Uuml;")
            .put("\u00DD", "&Yacute;")
            .put("\u00DE", "&THORN;")
            .put("\u00DF", "&szlig;")
            .put("\u00E0", "&agrave;")
            .put("\u00E1", "&aacute;")
            .put("\u00E2", "&acirc;")
            .put("\u00E3", "&atilde;")
            .put("\u00E4", "&auml;")
            .put("\u00E5", "&aring;")
            .put("\u00E6", "&aelig;")
            .put("\u00E7", "&ccedil;")
            .put("\u00E8", "&egrave;")
            .put("\u00E9", "&eacute;")
            .put("\u00EA", "&ecirc;")
            .put("\u00EB", "&euml;")
            .put("\u00EC", "&igrave;")
            .put("\u00ED", "&iacute;")
            .put("\u00EE", "&icirc;")
            .put("\u00EF", "&iuml;")
            .put("\u00F0", "&eth;")
            .put("\u00F1", "&ntilde;")
            .put("\u00F2", "&ograve;")
            .put("\u00F3", "&oacute;")
            .put("\u00F4", "&ocirc;")
            .put("\u00F5", "&otilde;")
            .put("\u00F6", "&ouml;")
            .put("\u00F7", "&divide;")
            .put("\u00F8", "&oslash;")
            .put("\u00F9", "&ugrave;")
            .put("\u00FA", "&uacute;")
            .put("\u00FB", "&ucirc;")
            .put("\u00FC", "&uuml;")
            .put("\u00FD", "&yacute;")
            .put("\u00FE", "&thorn;")
            .put("\u00FF", "&yuml;")
            .build();

    static final Map<String, String> ISO8859_1_DECODE = Maps.invert(ISO8859_1_ENCODE);

    static final Map<String, String> BASIC_ENCODE = Maps.<String, String>builder()
            .put("\"", "&quot;")
            .put("&", "&amp;")
            .put("<", "&lt;")
            .put(">", "&gt;")
            .build();

    static final Map<String, String> BASIC_DECODE = Maps.invert(BASIC_ENCODE);

    static final Map<String, String> APOS_ENCODE = Maps.<String, String>builder()
            .put("'", "&apos;")
            .build();

    static final Map<String, String> APOS_DECODE = Maps.invert(APOS_ENCODE);
}
